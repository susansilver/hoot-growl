---
import { getCollection, getEntry } from "astro:content";
import BaseHead from "../../../components/BaseHead.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts = await getCollection("blog");

  const sortedPosts = allPosts.sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
  ); // Sort by pubDate descending

  // Ensure allPosts have defined categories
  const allCategories = [
    ...new Set(
      sortedPosts.flatMap((post) => post.data.campaign || []) // Default to an empty array if undefined
    ),
  ];

  return allCategories.flatMap((campaigns) => {
    const filteredPosts = allPosts.filter(
      (post) => post.data.campaign && post.data.campaign.includes(campaigns)
    );
    return paginate(filteredPosts, {
      params: { campaigns },
      pageSize: 6,
    });
  });
}

interface Props {
  entry: CollectionEntry<"blog">;
}

const { entry } = Astro.props;
const { params } = Astro;

const campaignData = await getEntry(entry.data.getRef);
---

<html lang="en">
  <head>
    <BaseHead
      title={params.campaigns.toLowerCase().replace(/-/g, " ")}
      description={`Campaign archive for ${params.campaigns.replace(/-/g, " ")}`}
    />
  </head>

  <body class="bg-secondary-300">
    <Header />
    <main>
      {campaignData.data.title}
    </main>

    <Footer />
  </body>
</html>
